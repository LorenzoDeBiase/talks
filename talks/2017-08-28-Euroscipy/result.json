{"key":{"0":"Nevelsteen2016"},"unique_key":{"0":"bf646daa9c7b6849be966a4364375dac"},"title":{"0":"Distributed Technology-Sustained Pervasive Applications"},"author":{"0":"Kim J. L. Nevelsteen"},"abstract":{"0":"  Technology-sustained pervasive games, contrary to technology-supported\npervasive games, can be understood as computer games interfacing with the\nphysical world. Pervasive games are known to make use of 'non-standard input\ndevices' and with the rise of the Internet of Things (IoT), pervasive\napplications can be expected to move beyond games. This dissertation is\nrequirements- and development-focused Design Science research for distributed\ntechnology-sustained pervasive applications, incorporating knowledge from the\ndomains of Distributed Computing, Mixed Reality, Context-Aware Computing,\nGeographical Information Systems and IoT. Computer video games have existed for\ndecades, with a reusable game engine to drive them. If pervasive games can be\nunderstood as computer games interfacing with the physical world, can computer\ngame engines be used to stage pervasive games? Considering the use of\nnon-standard input devices in pervasive games and the rise of IoT, how will\nthis affect the architectures supporting the broader set of pervasive\napplications? The use of a game engine can be found in some existing pervasive\ngame projects, but general research into how the domain of pervasive games\noverlaps with that of video games is lacking. When an engine is used, a\ndiscussion of, what type of engine is most suitable and what properties are\nbeing fulfilled by the engine, is often not part of the discourse. This\ndissertation uses multiple iterations of the method framework for Design\nScience for the design and development of three software system architectures.\nIn the face of IoT, the problem of extending pervasive games into a fourth\nsoftware architecture, accommodating a broader set of pervasive applications,\nis explicated. The requirements, for technology-sustained pervasive games, are\nverified through the design, development and demonstration of the three\nsoftware system architectures. The ...\n"},"date":{"0":2016},"journal":{"0":"arXiv"},"provenance":{"0":"arXiv"}}